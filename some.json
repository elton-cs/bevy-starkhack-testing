Ok(Entity { hashed_keys: FieldElement { inner: 0x0000000000000000000000000000000000000000000000000000000000000000
    }, models: []
})
----------
Ok(Entity { hashed_keys: FieldElement { inner: 0x054f58c4a92809851a5e76be80aeeb01a3cf35db8479d83468b4e7467703f666
    }, models: [Model { name: "Position", members: [Member { name: "player", ty: Primitive(Felt252(Some(FieldElement { inner: 0x00b3ff441a68610b30fd5e2abbf3a1548eb6ba6f3559f2862bf2dc757e5828ca
                    }))), key: true
                }, Member { name: "vec", ty: Struct(Struct { name: "Vec2", children: [Member { name: "x", ty: Primitive(U32(Some(8))), key: false
                            }, Member { name: "y", ty: Primitive(U32(Some(11))), key: false
                            }
                        ]
                    }), key: false
                }
            ]
        }, Model { name: "DirectionsAvailable", members: [Member { name: "player", ty: Primitive(Felt252(Some(FieldElement { inner: 0x00b3ff441a68610b30fd5e2abbf3a1548eb6ba6f3559f2862bf2dc757e5828ca
                    }))), key: true
                }, Member { name: "directions", ty: Array([Enum(Enum { name: "Direction", option: Some(3), options: [EnumOption { name: "None", ty: Tuple([])
                                }, EnumOption { name: "Left", ty: Tuple([])
                                }, EnumOption { name: "Right", ty: Tuple([])
                                }, EnumOption { name: "Up", ty: Tuple([])
                                }, EnumOption { name: "Down", ty: Tuple([])
                                }
                            ]
                        }), Enum(Enum { name: "Direction", option: Some(2), options: [EnumOption { name: "None", ty: Tuple([])
                                }, EnumOption { name: "Left", ty: Tuple([])
                                }, EnumOption { name: "Right", ty: Tuple([])
                                }, EnumOption { name: "Up", ty: Tuple([])
                                }, EnumOption { name: "Down", ty: Tuple([])
                                }
                            ]
                        }), Enum(Enum { name: "Direction", option: Some(4), options: [EnumOption { name: "None", ty: Tuple([])
                                }, EnumOption { name: "Left", ty: Tuple([])
                                }, EnumOption { name: "Right", ty: Tuple([])
                                }, EnumOption { name: "Up", ty: Tuple([])
                                }, EnumOption { name: "Down", ty: Tuple([])
                                }
                            ]
                        }), Enum(Enum { name: "Direction", option: Some(1), options: [EnumOption { name: "None", ty: Tuple([])
                                }, EnumOption { name: "Left", ty: Tuple([])
                                }, EnumOption { name: "Right", ty: Tuple([])
                                }, EnumOption { name: "Up", ty: Tuple([])
                                }, EnumOption { name: "Down", ty: Tuple([])
                                }
                            ]
                        })
                    ]), key: false
                }
            ]
        }, Model { name: "Moves", members: [Member { name: "player", ty: Primitive(Felt252(Some(FieldElement { inner: 0x00b3ff441a68610b30fd5e2abbf3a1548eb6ba6f3559f2862bf2dc757e5828ca
                    }))), key: true
                }, Member { name: "remaining", ty: Primitive(U8(Some(100))), key: false
                }, Member { name: "last_direction", ty: Enum(Enum { name: "Direction", option: Some(0), options: [EnumOption { name: "None", ty: Tuple([])
                            }, EnumOption { name: "Left", ty: Tuple([])
                            }, EnumOption { name: "Right", ty: Tuple([])
                            }, EnumOption { name: "Up", ty: Tuple([])
                            }, EnumOption { name: "Down", ty: Tuple([])
                            }
                        ]
                    }), key: false
                }
            ]
        }
    ]
})
----------
Ok(Entity { hashed_keys: FieldElement { inner: 0x054f58c4a92809851a5e76be80aeeb01a3cf35db8479d83468b4e7467703f666
    }, models: [Model { name: "Position", members: [Member { name: "player", ty: Primitive(Felt252(Some(FieldElement { inner: 0x00b3ff441a68610b30fd5e2abbf3a1548eb6ba6f3559f2862bf2dc757e5828ca
                    }))), key: true
                }, Member { name: "vec", ty: Struct(Struct { name: "Vec2", children: [Member { name: "x", ty: Primitive(U32(Some(18))), key: false
                            }, Member { name: "y", ty: Primitive(U32(Some(21))), key: false
                            }
                        ]
                    }), key: false
                }
            ]
        }, Model { name: "DirectionsAvailable", members: [Member { name: "player", ty: Primitive(Felt252(Some(FieldElement { inner: 0x00b3ff441a68610b30fd5e2abbf3a1548eb6ba6f3559f2862bf2dc757e5828ca
                    }))), key: true
                }, Member { name: "directions", ty: Array([Enum(Enum { name: "Direction", option: Some(3), options: [EnumOption { name: "None", ty: Tuple([])
                                }, EnumOption { name: "Left", ty: Tuple([])
                                }, EnumOption { name: "Right", ty: Tuple([])
                                }, EnumOption { name: "Up", ty: Tuple([])
                                }, EnumOption { name: "Down", ty: Tuple([])
                                }
                            ]
                        }), Enum(Enum { name: "Direction", option: Some(2), options: [EnumOption { name: "None", ty: Tuple([])
                                }, EnumOption { name: "Left", ty: Tuple([])
                                }, EnumOption { name: "Right", ty: Tuple([])
                                }, EnumOption { name: "Up", ty: Tuple([])
                                }, EnumOption { name: "Down", ty: Tuple([])
                                }
                            ]
                        }), Enum(Enum { name: "Direction", option: Some(4), options: [EnumOption { name: "None", ty: Tuple([])
                                }, EnumOption { name: "Left", ty: Tuple([])
                                }, EnumOption { name: "Right", ty: Tuple([])
                                }, EnumOption { name: "Up", ty: Tuple([])
                                }, EnumOption { name: "Down", ty: Tuple([])
                                }
                            ]
                        }), Enum(Enum { name: "Direction", option: Some(1), options: [EnumOption { name: "None", ty: Tuple([])
                                }, EnumOption { name: "Left", ty: Tuple([])
                                }, EnumOption { name: "Right", ty: Tuple([])
                                }, EnumOption { name: "Up", ty: Tuple([])
                                }, EnumOption { name: "Down", ty: Tuple([])
                                }
                            ]
                        })
                    ]), key: false
                }
            ]
        }, Model { name: "Moves", members: [Member { name: "player", ty: Primitive(Felt252(Some(FieldElement { inner: 0x00b3ff441a68610b30fd5e2abbf3a1548eb6ba6f3559f2862bf2dc757e5828ca
                    }))), key: true
                }, Member { name: "remaining", ty: Primitive(U8(Some(100))), key: false
                }, Member { name: "last_direction", ty: Enum(Enum { name: "Direction", option: Some(0), options: [EnumOption { name: "None", ty: Tuple([])
                            }, EnumOption { name: "Left", ty: Tuple([])
                            }, EnumOption { name: "Right", ty: Tuple([])
                            }, EnumOption { name: "Up", ty: Tuple([])
                            }, EnumOption { name: "Down", ty: Tuple([])
                            }
                        ]
                    }), key: false
                }
            ]
        }
    ]
})
----------
Incoming Data: Ok(Entity { hashed_keys: FieldElement { inner: 0x054f58c4a92809851a5e76be80aeeb01a3cf35db8479d83468b4e7467703f666
    }, models: [Model { name: "Position", members: [Member { name: "player", ty: Primitive(Felt252(Some(FieldElement { inner: 0x00b3ff441a68610b30fd5e2abbf3a1548eb6ba6f3559f2862bf2dc757e5828ca
                    }))), key: true
                }, Member { name: "vec", ty: Struct(Struct { name: "Vec2", children: [Member { name: "x", ty: Primitive(U32(Some(18))), key: false
                            }, Member { name: "y", ty: Primitive(U32(Some(21))), key: false
                            }
                        ]
                    }), key: false
                }
            ]
        }, Model { name: "DirectionsAvailable", members: [Member { name: "player", ty: Primitive(Felt252(Some(FieldElement { inner: 0x00b3ff441a68610b30fd5e2abbf3a1548eb6ba6f3559f2862bf2dc757e5828ca
                    }))), key: true
                }, Member { name: "directions", ty: Array([Enum(Enum { name: "Direction", option: Some(3), options: [EnumOption { name: "None", ty: Tuple([])
                                }, EnumOption { name: "Left", ty: Tuple([])
                                }, EnumOption { name: "Right", ty: Tuple([])
                                }, EnumOption { name: "Up", ty: Tuple([])
                                }, EnumOption { name: "Down", ty: Tuple([])
                                }
                            ]
                        }), Enum(Enum { name: "Direction", option: Some(2), options: [EnumOption { name: "None", ty: Tuple([])
                                }, EnumOption { name: "Left", ty: Tuple([])
                                }, EnumOption { name: "Right", ty: Tuple([])
                                }, EnumOption { name: "Up", ty: Tuple([])
                                }, EnumOption { name: "Down", ty: Tuple([])
                                }
                            ]
                        }), Enum(Enum { name: "Direction", option: Some(4), options: [EnumOption { name: "None", ty: Tuple([])
                                }, EnumOption { name: "Left", ty: Tuple([])
                                }, EnumOption { name: "Right", ty: Tuple([])
                                }, EnumOption { name: "Up", ty: Tuple([])
                                }, EnumOption { name: "Down", ty: Tuple([])
                                }
                            ]
                        }), Enum(Enum { name: "Direction", option: Some(1), options: [EnumOption { name: "None", ty: Tuple([])
                                }, EnumOption { name: "Left", ty: Tuple([])
                                }, EnumOption { name: "Right", ty: Tuple([])
                                }, EnumOption { name: "Up", ty: Tuple([])
                                }, EnumOption { name: "Down", ty: Tuple([])
                                }
                            ]
                        })
                    ]), key: false
                }
            ]
        }, Model { name: "Moves", members: [Member { name: "player", ty: Primitive(Felt252(Some(FieldElement { inner: 0x00b3ff441a68610b30fd5e2abbf3a1548eb6ba6f3559f2862bf2dc757e5828ca
                    }))), key: true
                }, Member { name: "remaining", ty: Primitive(U8(Some(100))), key: false
                }, Member { name: "last_direction", ty: Enum(Enum { name: "Direction", option: Some(0), options: [EnumOption { name: "None", ty: Tuple([])
                            }, EnumOption { name: "Left", ty: Tuple([])
                            }, EnumOption { name: "Right", ty: Tuple([])
                            }, EnumOption { name: "Up", ty: Tuple([])
                            }, EnumOption { name: "Down", ty: Tuple([])
                            }
                        ]
                    }), key: false
                }
            ]
        }
    ]
})